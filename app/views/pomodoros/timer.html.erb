<div class="center">
  <h1><div id="phase"></div></h1>
  <div id="message"></div>
  <h1><div id="timer" class="countdown-timer"></div></h1>
  <progress id="progress" max="1" value="1"></progress>
  <br>
  <div>
    <button id="pause/resume" class="btn btn-primary">Pause/Resume</button>
    <button id="reset" class="btn btn-primary">Reset</button>
  </div>
</div>

<script>
  var focusTime = <%= @pomodoro.focus_time * 60 %>;
  var breakTime = <%= @pomodoro.break_time * 60 %>;

  var countdown = focusTime;
  var isBreakTime = false;
  var isPaused = false;
  var startTime = Date.now();
  var timerId; // Declare timerId here

  document.getElementById('phase').textContent = 'Focus Time';
  document.getElementById('progress').max = focusTime;

  function updateTimer() {
    if (!isPaused) {
      var elapsedTime = Math.floor((Date.now() - startTime) / 1000);
      countdown = isBreakTime ? breakTime - elapsedTime : focusTime - elapsedTime;
      if (countdown <= 0) {
        if (!isBreakTime) {
          countdown = focusTime;
          isBreakTime = true;
          startTime = Date.now();
          document.getElementById('phase').textContent = 'Break time';
          alert('Focus Time is up. Starting Break Time.');
          document.getElementById('progress').max = breakTime;
        } else {
          countdown = focusTime;
          isBreakTime = false;
          startTime = Date.now();
          document.getElementById('phase').textContent = 'Focus Time';
          alert('Break time is done.');
          clearInterval(timerId); // Stop the timer
          document.getElementById('phase').textContent = 'You Completed a Pomodoro!'; // Display the completion message

          // Add this AJAX request
          fetch('<%= complete_pomodoro_task_path(@pomodoro.id) %>', {
            method: 'PATCH',
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
              'Content-Type': 'application/json',
              'X-CSRF-Token': '<%= form_authenticity_token %>'
            },
            credentials: 'same-origin'
          });

          setTimeout(function() {
            var restart = confirm("Do you want to start another pomodoro?");
            if (restart) {
              // Restart the pomodoro
              countdown = focusTime;
              isBreakTime = false;
              startTime = Date.now();
              updateTimer(); // Update the timer immediately
              timerId = setInterval(updateTimer, 1000);
            } else {
              // Redirect to the pomodoro menu
              window.location.href = "/tasks"; // Replace with your actual pomodoro menu URL
            }
          }, 2000); // Delay of 2 seconds
        }
      }
      // Update the countdown on the page
      var hours = Math.floor(countdown / 3600);
      var minutes = Math.floor((countdown % 3600) / 60);
      var seconds = countdown % 60;
      document.getElementById('timer').textContent =
        (hours < 10 ? '0' : '') + hours + ':' +
        (minutes < 10 ? '0' : '') + minutes + ':' +
        (seconds < 10 ? '0' : '') + seconds;
      // Update the progress bar
      document.getElementById('progress').value = countdown;
    }
  }

  timerId = setInterval(updateTimer, 1000);

  document.getElementById('pause/resume').addEventListener('click', function() {
    isPaused = !isPaused;
    if (isPaused) {
      this.textContent = 'Resume';
    } else {
      this.textContent = 'Pause';
      if (isBreakTime) {
        startTime = Date.now() - (breakTime - countdown) * 1000;
      } else {
        startTime = Date.now() - (focusTime - countdown) * 1000;
      }
    }
  });

  document.getElementById('reset').addEventListener('click', function() {
    countdown = focusTime;
    isBreakTime = false;
    isPaused = false;
    startTime = Date.now();
    document.getElementById('phase').textContent = 'Focus Time';
    document.getElementById('progress').max = focusTime;
    document.getElementById('progress').value = countdown;
    document.getElementById('pause/resume').textContent = 'Pause';
  });
</script>
